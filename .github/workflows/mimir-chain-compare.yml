name: Compare test

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Fetch Failure Count from GitHub Pages
        run: |
          URL="https://planetarium.github.io/mimir-uptime/failure_count/failure_count.json"
          mkdir -p failure_count
          curl -f $URL -o failure_count/failure_count.json || echo '{"failure_count": 0}' > failure_count/failure_count.json
          echo "Fetched failure count:"
          cat failure_count/failure_count.json

      - name: Run Tests
        run: |
          dotnet restore mimir-uptime.sln
          dotnet test mimir-uptime.sln

      - name: Update Failure Count on Failure
        if: failure()
        run: |
          COUNT=$(jq '.failure_count' failure_count/failure_count.json)
          NEW_COUNT=$((COUNT + 1))
          jq ".failure_count = $NEW_COUNT" failure_count/failure_count.json > tmp.json && mv tmp.json failure_count/failure_count.json
          echo "Updated failure count to $NEW_COUNT"

      - name: Reset Failure Count on Success
        if: success()
        run: |
          jq ".failure_count = 0" failure_count/failure_count.json > tmp.json && mv tmp.json failure_count/failure_count.json
          echo "Failure count reset to 0"

      - name: Upload Failure Count to Artifact
        if: always()
        uses: actions/upload-pages-artifact@v1
        with:
          path: failure_count

      - name: Deploy Failure Count to GitHub Pages
        if: always()
        uses: actions/deploy-pages@v4
